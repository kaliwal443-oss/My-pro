name: Indian Grid Navigation CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CI: true
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  validate:
    name: Validate Project
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate project structure
      run: |
        echo "üîç Validating project structure..."
        [ -f "gradlew" ] || { echo "‚ùå gradlew file missing"; exit 1; }
        [ -f "app/build.gradle" ] || { echo "‚ùå app/build.gradle missing"; exit 1; }
        [ -f "app/src/main/AndroidManifest.xml" ] || { echo "‚ùå AndroidManifest.xml missing"; exit 1; }
        [ -d "app/src/main/java" ] || { echo "‚ùå Java source directory missing"; exit 1; }
        echo "‚úÖ Project structure validated"

    - name: Check Gradle wrapper
      run: |
        chmod +x ./gradlew
        ./gradlew --version

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: validate
    
    strategy:
      matrix:
        java: [17, 21]
        build-type: [debug, release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build ${{ matrix.build-type }} APK
      run: |
        echo "üèóÔ∏è Building ${{ matrix.build-type }} version with JDK ${{ matrix.java }}"
        ./gradlew clean assemble${{ matrix.build-type }} --stacktrace --no-daemon --console=plain
      env:
        # Mock Google Maps API key for CI builds
        GOOGLE_MAPS_API_KEY: "ci_test_key_12345"

    - name: Verify APK generated
      run: |
        echo "üì± Generated APK files:"
        find app/build/outputs -name "*.apk" -type f | while read file; do
          echo "üìÑ $file ($(du -h "$file" | cut -f1))"
        done

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run unit tests
      run: |
        ./gradlew test --stacktrace --no-daemon --console=plain

    - name: Run lint checks
      run: |
        ./gradlew lint --stacktrace --no-daemon --console=plain

    - name: Check code quality
      run: |
        ./gradlew ktlintCheck --stacktrace --no-daemon --console=plain || echo "‚ö†Ô∏è ktlint not configured"

  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    needs: [build, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Generate build reports
      run: |
        ./gradlew clean build --stacktrace --no-daemon --console=plain
        ./gradlew lintDebug --stacktrace --no-daemon --console=plain

    - name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-analysis-reports
        path: |
          app/build/reports/
          app/build/outputs/lint-results/
        retention-days: 30

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: generated-apks
        path: |
          app/build/outputs/apk/
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets
      run: |
        echo "üîí Checking for potential secrets..."
        # Basic check for API keys in code
        if grep -r "AIza[0-9A-Za-z_-]" app/src/; then
          echo "‚ö†Ô∏è Potential Google API key found in code"
        else
          echo "‚úÖ No obvious API keys in code"
        fi

    - name: Dependency vulnerability check
      run: |
        echo "üì¶ Checking dependencies..."
        ./gradlew dependencies --configuration implementation --console=plain

  deploy-demo:
    name: Deploy Demo APK
    runs-on: ubuntu-latest
    needs: [build, test, analyze]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: generated-apks
        path: downloaded-apks/

    - name: List downloaded APKs
      run: |
        echo "üì± Downloaded APKs:"
        find downloaded-apks -name "*.apk" -type f

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: downloaded-apks/app/build/outputs/apk/debug/*.apk
        body: |
          ## Indian Grid Navigation App
          
          ### New Features:
          - Indian Grid System navigation
          - Real-time compass
          - Satellite signal monitoring
          
          ### Download:
          - Debug APK: app-debug.apk
          
          ### Build Info:
          - Branch: ${{ github.ref }}
          - Commit: ${{ github.sha }}
          - Build Date: ${{ github.event.head_commit.timestamp }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
